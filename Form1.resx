<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="MenuStrip1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <metadata name="ToolTip1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>150, 22</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEAIACoEAAAFgAAACgAAAAgAAAAQAAAAAEAIAAAAAAAABAAAGEHAABhBwAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAHQbQAB0H1wAdBs4dHQXNaB0FzYYdBc4zHAbTAhwG
        0AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAHQXNAB0FzQAdBc0YHQXMdR0FzNYdBcz9HQXM/x0F
        zOQdBc12HQbPDx0FzQAcCtYAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABsL4AAbC+AFGwvgTBwK28gcCNb9HAfS/x0G
        zv8dBcz/HQXM/x0FzPsdBc2sHQXOJh4FywAdBtEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABsK4AAbC+AAGwvgFhsL4IobC+DwGwvg/xsL
        4P8bC+D/Gwrd/xwI1/8dBs//HQXM/x0FzP8dBczOHQXNPh0AtAAdBtAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAbC+AAGwvgABsL4CobC+C3Gwvg/RsL
        4P8bC+D/Gwvg/xsL4P8bC+D/Gwvg/xsK3f8cB9T/HQXN/x0FzP8dBczfHQXNThsO3AAdB9AAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAGgvgABsL4AAbC+A2GwvgzRsL
        4P8bC+D/Gwvg/xsL4P8bC+D/Gwvg/xsL4P8bC+D/Gwvg/xsL3/8cCNj/HQXO/x0FzP8dBczmHQXNUhUA
        cAAdBs4AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABsL4AAbC+AAGwvgMRsL
        4NEbC+D/Gwvg/xsL4P8bC+D/Gwvg/xsL4P8bC+L/Gwvf/xsL3v8bC+L/Gwvg/xsL4P8cCdn/HQXO/x0F
        zP8dBczkHQXNSB0EygAdBs8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAGwvgABsL
        4BwbC+DBGwvg/xoK4P8ZCeD/Ggrg/xsL4P8bC+D/Gwvg/yMTr/8uHm//Lx9r/ycXmv8cDNz/Gwvg/xsL
        4P8bCNj/GwPM/xsEy/8dBczYHQbNMR0FzAAdB9YAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABsL
        4AAbC+AFGwvgkxsL4P8bC+D/Lhzk/0It6f8zIOX/HAzg/xsL4v8iErX/MSFe/yMTr/8hEbv/Lh5r/ycY
        lf8bC+L/Gwvg/ywZ4/9EK9//NhzV/x8Hzf8cBMy5HQbOFR0FzQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAbC+EAGwvgABsL4EUbC+DvGwvg/1I77P+Zefv/qYf//4Jl+f8kE+P/Ggri/yYWoP8kFKz/Ggrl/xsL
        5P8fD8X/KhqF/xsL3v8cC+H/aU/z/6iG//+gf/v/aEvn/yMKzv4cBMx+HAzcAR0GzwAAAAAAAAAAAAAA
        AAAAAAAAAAAAABsL4AAbC+AFGwvgphsL4P8hEOH/fF/1/4tt+v9lTNv/PSm8/x8Pz/8bC+H/HAvd/xsL
        3/8bC+D/Gwvg/xsL3/8cDNv/Gwvh/xwM1v8yILz/XUXS/4Nm9v+NbfX/MRjT/xwEzOQdBc0xHQXNAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAGwvgABsL4CgbC+DkGwvg/xwL4P8mFeT/Kxqw/2hddP9QQS//MiI1/yER
        tv8bC+L/Gwvg/xsL4P8bC+D/Gwvg/xsL4v8dDMv/UUN7/2ZZTf80JB7/LBuO/ykU2P8fB83/HQXM/x0F
        zZAZC+EBHAbQAAAAAAAAAAAAAAAAAAAAAAAbC+AAGwvgVBsL4PsbC+D/Gwvg/xsL3P8yIlD/WEoi/3Rp
        S/+KgGH/PS5s/xoK3v8bC+D/Gwvg/xsL4P8bC+D/Ggrj/ykZiP9NPhn/aV09/46EaP9XSVH/HQvE/x0F
        zv8dBcz/HQXM2R0Fzh4dBc4AAAAAAAAAAAAAAAAAAAAAABsL4AAbC+BxGwvg/xsL4P8bC+D/HAza/zUl
        RP9XSCH/xcC1//z79f9nXJP/GQja/xsL4P8bC+D/Gwvg/xsL4P8aCuP/Kxt8/0s7E/+ZkXz//////6GZ
        pf8eDcL/HAbS/x0FzP8dBcz4HQXNSx0FzQAAAAAAAAAAAAAAAAAAAAAAGwvgABsL4HUbC+D/Gwvg/xsL
        4P8bC+L/KBeQ/3NnW/+TinH/nZaX/zgqs/8aCuH/Gwvg/xsL4P8bC+D/Gwvg/xsL4v8fD7n/V0pW/42E
        a/+lnZD/WU2h/xoK2/8cCNX/HQXM/x0FzP8dBc1wHQXLAAAAAAAAAAAAAAAAAAAAAAAbC+AAGwvgXxsL
        4P4bC+D/Gwvg/xsL4P8bC93/Jhau/ysbiP8hEa7/Ggrd/xsL4P8bC+D/Gwvg/xsL4P8bC+D/Gwvg/xsL
        4f8hEcD/LByO/yQUmv8bC9T/Gwvh/xwI1/8dBcz/HQXM/x0FzX0dBcsAAAAAAAAAAAAAAAAAAAAAABsL
        4AAbC+AxGwvg6xsL4P8bC+D/Gwvg/xsL4P8aCuL/Ggrk/xsL4/8bC+D/Gwvg/xsL4P8bC+D/Gwvg/xsL
        4P8bC+D/Gwvg/xsL4v8aCuP/Ggrj/xsL4f8bC+D/HAnZ/x0FzP8dBcz/HQXNbB0FzAAAAAAAAAAAAAAA
        AAAAAAAAGwvgABsL4AcbC+CoGwvg/xsL4P8bC+D/Gwvg/xsL4P8bC+D/Gwvg/xsL4P8bC+D/Gwvg/xsL
        4M8bC+C8Gwvg+xsL4P8bC+D/Gwvg/xsL4P8bC+D/Gwvg/xsL4P8cCdj/HQXM/x0FzPUdBc1DHQXNAAAA
        AAAAAAAAAAAAAAAAAAAaC+AAGwvgABsL4DQbC+DdGwvg/xsL4P8bC+D/Gwvg/xsL4P8bC+D/Gwvg/xsL
        4P8bC+DEGwvgJxsL4A8bC+CdGwvg/hsL4P8bC+D/Gwvg/xsL4P8bC+D/Gwvg/xwI1f8dBcz/HQXMxB0G
        zhIdBs4AAAAAAAAAAAAAAAAAAAAAAAAAAAAbCuAAGw3gABsL4EYbC+DTGwvg/xsL4P8bC+D/Gwvg/xsL
        4P8bC+D9GwvguRsL4CkbC+AAGwvgABsL4BQbC+CeGwvg+xsL4P8bC+D/Gwvg/xsL4P8bC9//HQbQ/x0F
        zO4dBc1SHQTLABwG0QAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAbC98AGwvjABsL4CMbC+B+GwvgwRsL
        4NobC+DYGwvguRsL4G0bC+AVGwvgABwM3wAAAAAAGwvgABsL4A4bC+BwGwvg1BsL4PkbC+D/Gwvg/xwJ
        2f0dBc3YHQXNXR0H0AMdBs8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAGwvgABsL
        4AEbC+ALGwvgGRsL4BgbC+AJGwzeABsL4AAAAAAAAAAAAAAAAAAAAAAAGwvgABwL4AEbC+AaGwvgTBsL
        4G4bC+B1HAfUWh0FzSAcCdQBHQbQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAA/////////////////////////////B////AP///AB///gAP//wAB//4A
        AP/8AAB/+AAAP/AAAB/wAAAP4AAAD+AAAAfgAAAH4AAAB+AAAAfgAAAH4AAAB+AAAAfwAAAH+AGAD/wD
        wA/+D+Af//////////////////////////8=
</value>
  </data>
</root>